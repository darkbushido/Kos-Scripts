local mission is import("lib/mission.ks").
local ship_utils is import("lib/ship_utils.ks").
local p is import("lib/params.ks").
<% if (@steps & ['launch','coast_to_atm']).any? -%>
local lazcalc is import("lib/lazcalc.ks").
<% end -%>
<% if (@steps & ['circularize_ap','hohmann_transfer','hohmann_transfer_target',
  'exec_node','free_return_correction','return_correction']).any? -%>
local node_exec is import("lib/node_exec.ks").
<% end -%>
<% if (@steps & ['set_launch_inc_lan', 'set_orbit_inc_lan']).any? -%>
local node_set_inc_lan is import("lib/node_set_inc_lan.ks").
<% end -%>
<% if (@steps & ['hohmann_transfer','adjust_ap','adjust_pe',
  'hohmann_transfer_target']).any? -%>
local hohmann is import("lib/hohmann_transfer.ks").
local hc is import("lib/hillclimb.ks").
local orbitfit is import("lib/fitness_orbit.ks").
<% end -%>
<% if (@steps & ['hohmann_transfer_return']).any? -%>
local hohmann_return is import("lib/hohmann_return.ks").
<% end -%>
<% if (@steps & ['free_return_correction','hohmann_correction',
  'hohmann_transfer_target','hohmann_transfer_return',
  'return_correction','transfer_return']).any? -%>
local transfit is import("lib/fitness_transfer.ks").
<% end -%>
<% if (@steps & ['collect_science']).any? -%>
local science is import("lib/science.ks").
<% end -%>
<% if (@steps & ['deorbit_node', 'land_on_target']).any? -%>
local cn is import("lib/circle_nav.ks").
local land is import("lib/land.ks").
<% end -%>
<% if (@steps & ['suicide_burn']).any? -%>
local suicide is import("lib/suicide_burn.ks").
<% end -%>
<% if (@steps & ['rendezvous']).any? -%>
local rndz is import("lib/rendezvous.ks").
<% end -%>
<% if (@steps & ['dock_with_ship']).any? -%>
local dock is import("lib/dock.ks").
<% end -%>

print "Mission Params".
print p.
list files.
local mission_base is mission(mission_definition@).
function mission_definition {
  parameter seq, ev, next.
  SET pT TO AVAILABLETHRUST.
  ev:add("Power", ship_utils["power"]).
  SET thrott to 0.

<% @steps.uniq.each do |step| -%>
<%= render "functions/#{step}.ks" -%>
<% end -%>
<% @steps.each do |step| -%>
  seq:add(<%= step -%>@).
<% end -%>
}
export(mission_base).
